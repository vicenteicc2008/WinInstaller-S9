#!/sbin/bash
#
# Copyright (C) 2025-26 https://github.com/Kumar-jy, https://github.com/ArKT-7
#
# Made for Windows Installation on WOA Devices 
#

# ================= Load Config =================
source "$CONFIG_FILE"
# ======================= UI Prints / Functions / Execution ========================
# NOTE: 95% of code moved to update-binary functions for modularity/no need changes
# TO-DO: Add multi-language support for the print.
#       Will implement this after figuring out proper handling of volume key input
#       along with a timeout mechanism for user selections

print_line = # Prints a banner line using CHAR_WIDTH length of '-' (or custom character), wrapped with '*' on both ends
print_centered "Welcome to Windows Installation on $DEVICE_NAME"
print_centered "Version: $WI_VERSION"
print_centered "Build Date: $BUID_DATE"
print_centered "Made by: Kumar_Jy & ArKT"
print_centered "Help and suggestions by: Sog, Andre_grams"
print_centered "Drivers & UEFI: $MAINTAINER"
print_line =
verify_device
aio_progress 0.5 10   # start progress from 0% to 50% in 10 seconds
print_centered "Verifying files integrity and checks"
file_checksum
print_centered "files Verifications Done"
print_line
print_centered "Verifying required Partitions"
verify_part
print_line # Prints a banner line using CHAR_WIDTH length of '-' (or custom character), wrapped with '*' on both ends
print_centered "Checking Battery Status"
if verify_battery; then
print_centered "Battery percentage is sufficient: $CURRENT_BATTERY%"
else
   abort "Battery is below $REQUIRED_BATTERY%, exiting..."
fi
print_line
print_centered "Fixing GPT"
aio_progress 0.5 0    # instantly moves progress back to 50% (for reset or rewind)
aio_progress 0.5 10   # start progress from 0% to 50% in 10 seconds
run_gptfix
print_line
print_centered "Extracting boot and modem to /sdcard/backup"
backup_partitions $PARTITION_BACKUP
print_line
print_centered "Checking if Windows is already installed"
print_line
if is_windows_installed; then
print_centered "Windows is already installed"
print_line
aio_progress 0.5 0    # instantly moves progress back to 50% (for reset or rewind)
winask=("Option 1: Driver Update/install only" "Option 2: Windows re-install (with format)")
navigate_menu_timeout "${winask[@]}"
case "$selection" in
  0)
    if is_partition_rw; then
    print_line
    print_centered "Skipping format and copy steps"
    print_centered "and processing for Drivers Installation"
    else
    print_exit
    print_centered "Error: Partition is Read-Only"
    nl_print_centered "Goto Windows then reboot to Android and try again"
    umount "$WIN_PATH"
    exit 1
    fi
    ;;
  1)
    aio_progress 0.5 0    # instantly moves progress back to 5% (for reset or rewind)
    aio_progress 0.9 80   # moves progress from 5% to 90% in 80 seconds
    print_line
    print_centered "You chose to reinstall Windows"
    print_centered "Proceeding with formatting and installation"
    print_line
    print_centered "Searching for Windows Image"
    win_esd_search
    print_line
    print_centered "Verifying Windows Edition"
    find_index
    print_line
    print_centered "Installing $SELECTED_EDITION...."
    format_win
    "$UPD_TEMP_FOLDER/wimlib-imagex" apply "$WIN_IMAGE" "$SELECTED_INDEX" "$WIN_PATH"
    ;;
  esac
else
aio_progress 0.5 0    # instantly moves progress back to 5% (for reset or rewind)
aio_progress 0.9 80   # moves progress from 5% to 90% in 80 seconds
print_centered "Windows is not already installed"
print_centered "Proceeding with Windows Installation"
print_line
print_centered "Searching for Windows Image"
win_esd_search
print_line
print_centered "Verifying Windows Edition"
find_index
print_line
print_centered "Installing $SELECTED_EDITION...."
format_win
"$UPD_TEMP_FOLDER/wimlib-imagex" apply "$WIN_IMAGE" "$SELECTED_INDEX" "$WIN_PATH"
fi
if ! is_windows_installed; then
print_exit
print_centered "$SELECTED_EDITION Fail to install "
print_centered "ESD/WIM file may be corrupted..."
nl_print_centered "Reboot to Android and check the ESD/WIM file."
umount "$WIN_PATH"
exit 1
fi
# Not sure if I'll make any improvements/modular here, but may be as of now currently doesn't seem necessary
# Already handled non-A/B device support in a one-liner
aio_progress 0.5 0    # instantly moves progress back to 50% (for reset or rewind)
aio_progress 0.95 50  # moves progress from 50% to 95% in 50 seconds
print_line
print_centered "Extracting Installation File";
package_extract_folder "installer" "$WIN_MOUNT_FOLDER"
for var in ESP_PART_NAME DEVICE_NAME WI_VERSION BUID_DATE SECURE_BOOT MAINTAINER; do
  eval value=\$$var
  sed -i "s|^set $var=.*|set $var=$value|" "$PE_INSTALLER"
done
package_extract_folder "ToolBox" "$WIN_MOUNT_FOLDER"
print_line
print_centered "Flashing UEFI image"
rm /sdcard/UEFI/*.img
mkdir -p /sdcard/UEFI
dd if="$WIN_MOUNT_FOLDER/installer/uefi.img" of="/sdcard/UEFI/uefi.img" bs=1M || { abort "Error copying uefi.img"; }
dd if="/sdcard/backup/boot$(getprop ro.boot.slot_suffix).img" of="$WIN_MOUNT_FOLDER/boot.img" bs=1M 2>/dev/null || dd if="/sdcard/backup/boot.img" of="$WIN_MOUNT_FOLDER/boot.img" bs=1M || { abort "Error copying boot.img in Windows"; }
dd if="$WIN_MOUNT_FOLDER/installer/pe.img" of="$BASE_PATH/esp" bs=1M || { abort "Error flashingh WinPE.img"; }
dd if="$WIN_MOUNT_FOLDER/installer/uefi.img" of="$BASE_PATH/boot$(getprop ro.boot.slot_suffix)" bs=1M 2>/dev/null || dd if="$WIN_MOUNT_FOLDER/installer/uefi.img" of="$BASE_PATH/boot" bs=1M || { abort "Error flashing uefi on boot partition"; }
umount "$WIN_PATH" "$ESP_PATH"
sleep 1
print_line =
print_centered "Flashing Completed, Now reboot to system"
print_centered "Installation will start automatically"
print_line =
print_centered "If it fails, Don't Flash it again"
print_centered "ask for help on Telegram: @wininstaller"
print_centered "Thanks to all WOA Developers & Maintainers"
print_line =
exitask=("Option 1: Reboot device" "Option 2: Exit")
navigate_menu_timeout "${exitask[@]}"
case "$selection" in
  0)
    print_line
    print_centered "your device will reboot now!"
    print_line
    sleep 1
	  reboot
    ;;
  1)
    print_line
    print_centered "WinInstaller nuked done!"
    print_line
    exit
    ;;
esac
exit
